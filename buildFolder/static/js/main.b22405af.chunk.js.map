{"version":3,"sources":["ParkPanel.js","FirebaseApp.js","App.js","reportWebVitals.js","index.js"],"names":["db","getFirestore","ParkPanel","useState","parks","setParks","newParkName","setNewParkName","addPark","e","a","preventDefault","writeParkData2","getParkData","getDocs","collection","querySnapshot","docs","name","addDoc","docRef","console","log","id","error","map","park","i","data","onSubmit","onChange","target","value","type","onClick","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","FirebaseApp","children","App","className","href","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RAiBMA,EAAKC,cAiDIC,EA7CG,WAChB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAEMC,EAAO,uCAAG,WAAOC,GAAP,SAAAC,EAAA,6DACdD,EAAEE,iBADY,SAERC,EAAeN,GAFP,2CAAH,sDAOPO,EAAW,uCAAG,4BAAAH,EAAA,sEACUI,YAAQC,YAAWf,EAAI,UADjC,OACZgB,EADY,OAElBX,EAASW,EAAcC,MAFL,2CAAH,qDAUXL,EAAc,uCAAG,WAAOM,GAAP,eAAAR,EAAA,+EAEES,YAAOJ,YAAWf,EAAI,SAAU,CACnDkB,SAHiB,OAEbE,EAFa,OAKnBC,QAAQC,IAAI,6BAA8BF,EAAOG,IAL9B,gDAOnBF,QAAQG,MAAM,0BAAd,MAPmB,yDAAH,sDAUpB,OACE,gCACGpB,GAASA,EAAMqB,KAAI,SAACC,EAAMC,GAAQ,OAAQ,8BAAcD,EAAKE,OAAOV,MAAhBS,MADvD,WAGE,uBAAME,SAAUrB,EAAhB,UACE,uBAAOsB,SA5Ba,SAACrB,GACzBF,EAAeE,EAAEsB,OAAOC,QA2BgBA,MAAO1B,IAC3C,uBAAO2B,KAAK,cAGd,uBAAOA,KAAK,SAASD,MAAM,cAAcE,QAASrB,QC5CvDsB,YAVsB,CACrBC,OAAQ,0CACRC,WAAY,wCACZC,UAAW,wBACXC,cAAe,oCACfC,kBAAmB,eACnBC,MAAO,8CAKT,IAQeC,EARK,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACpB,OACE,8BACGA,KCSQC,MAvBf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SAEE,mBACEA,UAAU,WACVC,KAAK,sBACLf,OAAO,SACPgB,IAAI,sBAJN,2BASF,+BACE,cAAC,EAAD,UACE,cAAC,EAAD,YCXKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b22405af.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { collection, addDoc } from \"firebase/firestore\";\r\nimport { getDocs } from \"firebase/firestore\";\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCbf69wqSQcMxJ9shK8cqqIw2TeL4z8flg\",\r\n  authDomain: \"fir-boilerplate-6fda0.firebaseapp.com\",\r\n  projectId: \"fir-boilerplate-6fda0\",\r\n  storageBucket: \"fir-boilerplate-6fda0.appspot.com\",\r\n  messagingSenderId: \"111931837766\",\r\n  appId: \"1:111931837766:web:d5cd2ca39dc35c99742947\"\r\n};\r\n\r\n// Initialize Firebase\r\n//const app = initializeApp(firebaseConfig);\r\nconst db = getFirestore();\r\n\r\n\r\n\r\nconst ParkPanel = () => {\r\n  const [parks, setParks] = useState([]);\r\n  const [newParkName, setNewParkName] = useState('');\r\n\r\n  const addPark = async (e) => {\r\n    e.preventDefault();\r\n    await writeParkData2(newParkName);\r\n  }\r\n  const newParkNameChange = (e) => {\r\n    setNewParkName(e.target.value);\r\n  }\r\n  const getParkData = async () => {\r\n    const querySnapshot = await getDocs(collection(db, \"parks\"));\r\n    setParks(querySnapshot.docs);\r\n    // querySnapshot.forEach((doc) => {\r\n    //   setParks([...parks, doc.data()]);\r\n    //   console.log(`${doc.id} => ${doc.data()}`);\r\n    // });\r\n\r\n  }\r\n\r\n  const writeParkData2 = async (name) => {\r\n    try {\r\n      const docRef = await addDoc(collection(db, \"parks\"), {\r\n        name\r\n      });\r\n      console.log(\"Document written with ID: \", docRef.id);\r\n    } catch (e) {\r\n      console.error(\"Error adding document: \", e);\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      {parks && parks.map((park, i) => { return (<div key={i}>{park.data().name}</div>) })}\r\n      new park\r\n      <form onSubmit={addPark}>\r\n        <input onChange={newParkNameChange} value={newParkName}></input>\r\n        <input type=\"submit\" />\r\n\r\n      </form>\r\n      <input type=\"button\" value=\"getparkdata\" onClick={getParkData} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ParkPanel\r\n","import React from 'react'\r\nimport { initializeApp } from \"firebase/app\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCbf69wqSQcMxJ9shK8cqqIw2TeL4z8flg\",\r\n  authDomain: \"fir-boilerplate-6fda0.firebaseapp.com\",\r\n  projectId: \"fir-boilerplate-6fda0\",\r\n  storageBucket: \"fir-boilerplate-6fda0.appspot.com\",\r\n  messagingSenderId: \"111931837766\",\r\n  appId: \"1:111931837766:web:d5cd2ca39dc35c99742947\"\r\n};\r\n\r\n// Initialize Firebase\r\n initializeApp(firebaseConfig);\r\nconst FirebaseApp = ({children}) => {\r\n  return (\r\n    <div>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FirebaseApp\r\n","import './App.css';\n// Import the functions you need from the SDKs you need\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\nimport ParkPanel from './ParkPanel';\nimport FirebaseApp from './FirebaseApp';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n       \n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n      <body>\n        <FirebaseApp>\n          <ParkPanel />\n          </FirebaseApp>\n      </body>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}